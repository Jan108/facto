package api

import scala.collection.immutable.{Seq, Set}

import boopickle.Default._

import models.accounting.config._

object Picklers {
  // This pickler should normally be autogenerated by boopickle, but there seems to be a bug
  // causing this not to work. Fixed by manually picking templates.
  implicit object TemplatePickler extends Pickler[Template] {
    override def pickle(template: Template)(implicit state: PickleState): Unit = {
      state.pickle(template.code)
      state.pickle(template.name)
      state.pickle(template.placement.map(_.toString))
      state.pickle(template.onlyShowForUserLoginNames)
      state.pickle(template.zeroSum)
      state.pickle(template.iconClass)
      state.pickle(template.transactions)
    }
    override def unpickle(implicit state: UnpickleState): Template = {
      Template(
        code = state.unpickle[String],
        name = state.unpickle[String],
        placement = state.unpickle[Set[String]].map(Template.Placement.fromString),
        onlyShowForUserLoginNames = state.unpickle[Option[Set[String]]],
        zeroSum = state.unpickle[Boolean],
        iconClass = state.unpickle[String],
        transactions = state.unpickle[Seq[Template.Transaction]]
      )
    }
  }
}