# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# General
GET  /                                 controllers.Application.index
GET  /manualtests/                     controllers.Application.manualTests

# External API
GET  /externalapi/docachemanagement/:appSecret/              controllers.ExternalApi.doCacheManagement(appSecret)
GET  /externalapi/warmupcaches/:appSecret/                   controllers.ExternalApi.warmUpCaches(appSecret)
GET  /externalapi/acc/trans/addfromtpl/:tplCode/:appSecret/  controllers.ExternalApi.addTransactionFromTemplate(tplCode, appSecret)
GET  /externalapi/acc/money/xchgmeasurement/:date/:currency/:ratio/:appSecret/  controllers.ExternalApi.addExchangeRateMeasurement(date, currency, ratio: Double, appSecret)

# Auth
GET  /login/                           controllers.Auth.login
POST /login/                           controllers.Auth.authenticate
GET  /logout/                          controllers.Auth.logout

# User
GET   /profile/                        controllers.Application.profile
POST  /profile/changepassword/         controllers.Application.changePassword
GET   /administration/                 controllers.Application.administration
POST  /profile/adduser/                controllers.Application.addUser

# Accounting - general
GET  /acc/search/                      controllers.accounting.GeneralActions.searchMostRelevant(q ?= "")
GET  /acc/search/all/                  controllers.accounting.GeneralActions.searchAll(q ?= "")
GET  /acc/logs/                        controllers.accounting.GeneralActions.updateLogsLatest
GET  /acc/logs/all/                    controllers.accounting.GeneralActions.updateLogsAll
GET  /acc/templates/                   controllers.accounting.GeneralActions.templateList

# Accounting - JSON API
GET  /jsonapi/acc/descriptions/:beneficiaryCode/:reservoirCode/:categoryCode/  controllers.accounting.JsonApi.filterDescriptions(beneficiaryCode, reservoirCode, categoryCode, q ?= "")
GET  /jsonapi/acc/tags/all/            controllers.accounting.JsonApi.getAllTags
POST /jsonapi/acc/money/exchange/:fromCents/:fromCurrency/:date/:toCurrency/  controllers.accounting.JsonApi.exchangeMoney(fromCents: Long, fromCurrency, date, toCurrency)

# Accounting - views
GET  /acc/everything/                  controllers.accounting.Views.everythingLatest
GET  /acc/everything/all/              controllers.accounting.Views.everythingAll
GET  /acc/cashflow/                    controllers.accounting.Views.cashFlowOfAll
GET  /acc/cashflow/r/:reservoirCode/   controllers.accounting.Views.cashFlowOfSingle(reservoirCode)
GET  /acc/cashflow/hidden/             controllers.accounting.Views.cashFlowOfHidden
GET  /acc/liquidation/                 controllers.accounting.Views.liquidationOfAll
GET  /acc/liquidation/:accountCode1/:accountCode2/  controllers.accounting.Views.liquidationOfSingle(accountCode1, accountCode2)
GET  /acc/endowments/                  controllers.accounting.Views.endowmentsOfAll
GET  /acc/endowments/:accountCode/     controllers.accounting.Views.endowmentsOfSingle(accountCode)
GET  /acc/summary/                     controllers.accounting.Views.summaryForCurrentYear(tags ?= "", toggleTag ?= "")
GET  /acc/summary/:expandedyear/       controllers.accounting.Views.summaryFor(expandedyear: Int, tags ?= "", toggleTag ?= "")

# Autowire calls
POST /scalajsapi/*path                 controllers.Application.scalaJsApi(path: String)

# Map static resources from the /public folder to the /assets URL path
GET  /assets/*file                     controllers.Assets.versioned(path="/public", file: Asset)
GET  /webjars/*file                    controllers.WebJarAssets.at(file)
