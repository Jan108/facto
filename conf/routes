# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# General
GET  /                                 controllers.Application.index

# External API
GET  /externalapi/docachemanagement/:appSecret/            controllers.ExternalApi.doCacheManagement(appSecret)
GET  /externalapi/warmupcaches/:appSecret/                 controllers.ExternalApi.warmUpCaches(appSecret)

# Auth
GET  /login/                           controllers.Auth.login
POST /login/                           controllers.Auth.authenticate
GET  /logout/                          controllers.Auth.logout

# User
GET   /profile/                        controllers.Application.profile
POST  /profile/changepassword/         controllers.Application.changePassword
GET   /administration/                 controllers.Application.administration
POST  /profile/adduser/                controllers.Application.addUser

# Accounting - general
GET  /acc/search/                      controllers.accounting.GeneralActions.searchMostRelevant(q ?= "")
GET  /acc/search/all/                  controllers.accounting.GeneralActions.searchAll(q ?= "")
GET  /acc/logs/                        controllers.accounting.GeneralActions.updateLogsLatest
GET  /acc/logs/all/                    controllers.accounting.GeneralActions.updateLogsAll
GET  /acc/templates/                   controllers.accounting.GeneralActions.templateList

# Accounting - JSON API
GET  /jsonapi/acc/tags/all/                controllers.accounting.JsonApiActions.getAllTags

# Accounting - views
GET  /acc/everything/                  controllers.accounting.Views.everythingLatest
GET  /acc/everything/all/              controllers.accounting.Views.everythingAll
GET  /acc/cashflow/                    controllers.accounting.Views.cashFlowOfAll
GET  /acc/cashflow/:reservoirCode/     controllers.accounting.Views.cashFlowOfSingle(reservoirCode)
GET  /acc/liquidation/                 controllers.accounting.Views.liquidationOfAll
GET  /acc/liquidation/:accountCode1/:accountCode2/  controllers.accounting.Views.liquidationOfSingle(accountCode1, accountCode2)
GET  /acc/endowments/                  controllers.accounting.Views.endowmentsOfAll
GET  /acc/endowments/:accountCode/     controllers.accounting.Views.endowmentsOfSingle(accountCode)
GET  /acc/summary/                     controllers.accounting.Views.summaryForCurrentYear(tags ?= "", toggleTag ?= "")
GET  /acc/summary/:expandedyear/       controllers.accounting.Views.summaryFor(expandedyear: Int, tags ?= "", toggleTag ?= "")

# Accounting - transaction group operations
GET  /acc/trans/new/                   controllers.accounting.TransactionGroupOperations.addNewForm(returnTo ?= "/")
POST /acc/trans/new/                   controllers.accounting.TransactionGroupOperations.addNew(returnTo ?= "/")
GET  /acc/trans/edit/:transGroupId/    controllers.accounting.TransactionGroupOperations.editForm(transGroupId: Long, returnTo ?= "/")
POST /acc/trans/edit/:transGroupId/    controllers.accounting.TransactionGroupOperations.edit(transGroupId: Long, returnTo ?= "/")
GET  /acc/trans/delete/:transGroupId/  controllers.accounting.TransactionGroupOperations.delete(transGroupId: Long, returnTo ?= "/")

# Accounting - transaction group operations - shortcuts
GET /acc/trans/newfromtpl/:templateId/ controllers.accounting.TransactionGroupOperations.addNewFromTemplate(templateId: Long, returnTo ?= "/")
GET  /acc/trans/repay/:accountCode1/:accountCode2/:amountInCents/  controllers.accounting.TransactionGroupOperations.addNewLiquidationRepayForm(accountCode1, accountCode2, amountInCents: Long, returnTo ?= "/")

# Accounting - balance check operations
GET  /acc/bc/new/:moneyReservoirCode/  controllers.accounting.BalanceCheckOperations.addNewForm(moneyReservoirCode, returnTo ?= "/")
POST /acc/bc/new/:moneyReservoirCode/  controllers.accounting.BalanceCheckOperations.addNew(moneyReservoirCode, returnTo ?= "/")
GET  /acc/bc/confirm/:moneyReservoirCode/:balanceInCents/:mostRecentTransactionId/  controllers.accounting.BalanceCheckOperations.addConfirmation(moneyReservoirCode, balanceInCents: Long, mostRecentTransactionId: Long, returnTo ?= "/")
GET  /acc/bc/edit/:bcId/               controllers.accounting.BalanceCheckOperations.editForm(bcId: Long, returnTo ?= "/")
POST /acc/bc/edit/:bcId/               controllers.accounting.BalanceCheckOperations.edit(bcId: Long, returnTo ?= "/")
GET  /acc/bc/delete/:bcId/             controllers.accounting.BalanceCheckOperations.delete(bcId: Long, returnTo ?= "/")

# Map static resources from the /public folder to the /assets URL path
GET  /assets/*file                     controllers.Assets.at(path="/public", file)
GET  /webjars/*file                    controllers.WebJarAssets.at(file)
